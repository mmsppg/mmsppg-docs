---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getAgendas } from '../lib/directus';

let agendas = [];
let error = null;

try {
  agendas = await getAgendas();
  console.log("Agendas data:", JSON.stringify(agendas, null, 2));
} catch (e) {
  error = e.message;
  console.error("Error loading agendas:", e);
}

function formatDate(dateString: string) {
  try {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-GB', { 
      day: 'numeric', 
      month: 'long', 
      year: 'numeric' 
    });
  } catch {
    return dateString;
  }
}
---

<BaseLayout>
  <div class="relative">
    <!-- Header Section -->
    <div class="relative mb-12 pb-8 border-b-2 border-[#5B9085]/20">
      <div class="absolute inset-0 bg-gradient-to-r from-[#5B9085]/5 to-[#529F44]/5 rounded-2xl -z-10"></div>
      <div class="flex items-center gap-4 mb-4">
        <div class="w-16 h-16 rounded-2xl bg-gradient-to-br from-[#5B9085] to-[#529F44] flex items-center justify-center shadow-lg">
          <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
          </svg>
        </div>
        <div>
          <h2 class="text-5xl font-bold text-[#596175] tracking-tight">Meeting Agendas</h2>
          <p class="text-lg text-[#305A65]/70 mt-2">Past and upcoming meeting agendas with items</p>
        </div>
      </div>
    </div>

    {error ? (
      <div class="p-8 bg-red-50 border border-red-200 rounded-lg text-red-600">
        Error loading agendas: {error}
      </div>
    ) : agendas.length === 0 ? (
      <div class="flex flex-col items-center justify-center py-20 px-4">
        <div class="w-20 h-20 bg-[#5B9085]/10 rounded-full flex items-center justify-center mb-6">
          <svg class="w-10 h-10 text-[#5B9085]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
          </svg>
        </div>
        <p class="text-xl text-[#305A65] font-medium">No agendas available yet.</p>
      </div>
    ) : (
      <div class="space-y-6">
        {agendas.map((agenda, index) => {
          const items = agenda.agenda_items || [];
          const sortedItems = Array.isArray(items) 
            ? items.sort((a, b) => (a.order || 0) - (b.order || 0))
            : [];

          return (
            <div
              key={agenda.id}
              class="group relative bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 border border-[#5B9085]/20 hover:border-[#5B9085]/40 overflow-hidden"
              style={`animation: fadeInUp 0.5s ease-out ${index * 0.1}s both;`}
            >
              <!-- Header -->
              <div class="bg-gradient-to-r from-[#5B9085] to-[#529F44] p-6 text-white">
                <div class="flex items-center justify-between">
                  <div>
                    <h3 class="text-2xl font-bold mb-2">
                      Meeting Agenda
                    </h3>
                    <div class="flex items-center gap-2 text-white/90">
                      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                      <span class="font-medium">{formatDate(agenda.meeting_date)}</span>
                    </div>
                  </div>
                  
                  {agenda.category && (
                    <div class="px-4 py-2 bg-white/20 backdrop-blur-sm rounded-lg text-sm font-semibold">
                      {agenda.category}
                    </div>
                  )}
                </div>
              </div>

              <!-- Agenda Items -->
              <div class="p-6">
                {sortedItems.length === 0 ? (
                  <p class="text-[#305A65] italic">No agenda items added yet.</p>
                ) : (
                  <div class="space-y-4">
                    {sortedItems.map((item, itemIndex) => (
                      <div
                        key={item.id || itemIndex}
                        class="flex gap-4 p-4 rounded-lg bg-[#EDF0ED] hover:bg-[#5B9085]/5 transition-colors"
                      >
                        <!-- Item number -->
                        <div class="flex-shrink-0 w-8 h-8 rounded-full bg-gradient-to-br from-[#5B9085] to-[#529F44] flex items-center justify-center text-white font-bold text-sm">
                          {item.order || itemIndex + 1}
                        </div>

                        <!-- Item content -->
                        <div class="flex-1">
                          <h4 class="text-lg font-bold text-[#596175] mb-2">
                            {item.topic || 'Untitled Item'}
                          </h4>
                          {item.description && (
                            <p class="text-[#305A65] leading-relaxed">
                              {item.description}
                            </p>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          );
        })}
      </div>
    )}
  </div>
</BaseLayout>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>